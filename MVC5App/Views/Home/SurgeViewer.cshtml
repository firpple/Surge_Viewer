@{
    // ABOUT USING EXTERNAL JAVASCRIPTS
    // https://stackoverflow.com/questions/24763493/how-to-include-js-files-in-the-view-asp-net-mvc-4
}



@{
    ViewBag.Title = "SurgeViewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Scripts.Render("~/Views/Home/JacksonScript.js");
    //Scripts.Render("~/Scripts/JacksonScript.js");
}

@{
    List<string> myDates = new List<string>();
    int year = 2020;
    int month = 1;
    int day = 1;


    for (day = 1; day < 25; day++)
    {
        myDates.Add(string.Format("{0} - {1} - {2} 11:07:00 UTC", year, month, day));
    }

    string csDate = myDates[13];
}

<script src="~/Scripts/Test/JacksonScript.js"></script>


@{
    string queryString = "";
    string[] topicList;

    var companyString = "irib";
    var topicString = "MySQL";

    if (IsPost)
    {
        companyString = Request.Form["companyName"];
        topicString = Request.Form["topicName"];
    }

    var tempQueryTools = new MVC5App.Scripts.Test.QueryTools();
    queryString = tempQueryTools.findSurgeWithCompanyTopic(companyString, topicString, "%");
    topicList = queryString.Split('%');


    <p>
        @companyString is interested in:
    </p>
    for (int i = 0; i < topicList.Length - 2; i++)
    {
        <div>
        <script>PrintDateFromStr2("@topicList[i]");</script> @topicList[++i]</div>
    }
}



<h2>SurgeViewer</h2>

<p>
    Message from an external JS file:
    <script>
        PrintHello();
    </script>

<p>
    @csDate
    <hr />

    Print something from c#:
    <script>PrintDateFromStr("@csDate");</script>
</p>


<img src="~/Scripts/Test/download.jpg" />

</p>

<!-- How to print a C# loop-->

@{
    int[] csNums = new int[10];
    for (int i = 0; i < 10; i++)
    {
        csNums[i] = i * 2;
    }
}

<p>
    <script>
        var jsNums = [];

        @foreach (var num in csNums)
        {
            @:jsNums.push(@num);
        }

        for (i = 0; i < jsNums.length; i++) {
            document.write(jsNums[i], "<br />");
        }
    </script>
</p>


<!-- BEGIN TRYING TO ADD CHARTS -->

<script src="~/Scripts/amcharts/amcharts.js"></script>
<script src="~/Scripts/amcharts/serial.js"></script>


<script>


    var chartData = [];
    generateChartData();

    var chart = AmCharts.makeChart("chartdiv", {
        type: "serial",
        dataProvider: chartData,
        categoryField: "date",
        categoryAxis: {
            parseDates: true,
            gridAlpha: 0.15,
            minorGridEnabled: true,
            axisColor: "#DADADA"
        },
        valueAxes: [{
            axisAlpha: 0.2,
            id: "v1"
        }],
        graphs: [{
            title: "red line",
            id: "g1",
            valueAxis: "v1",
            valueField: "visits",
            bullet: "round",
            bulletBorderColor: "#FFFFFF",
            bulletBorderAlpha: 1,
            lineThickness: 2,
            lineColor: "#b5030d",
            negativeLineColor: "#0352b5",
            balloonText: "[[category]]<br><b><span style='font-size:14px;'>value: [[value]]</span></b>"
        }],
        chartCursor: {
            fullWidth: true,
            cursorAlpha: 0.1
        },
        chartScrollbar: {
            scrollbarHeight: 40,
            color: "#FFFFFF",
            autoGridCount: true,
            graph: "g1"
        },

        mouseWheelZoomEnabled: true
    });

    chart.addListener("dataUpdated", zoomChart);











    // Generate chart data crom C#
    function generateChartData() {

        var newDate = new Date();
        var visits = 0;






        @foreach(var d in myDates)
        {
            @:newDate = ParseDate("@d");
            @:visits = Math.round(Math.random() * 40);
            @:chartData.push({date: newDate,visits: visits});
        }
    }

    // this method is called when chart is first inited as we listen for "dataUpdated" event
    function zoomChart() {
        // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
        chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
    }

    // changes cursor mode from pan to select
    function setPanSelect() {
        var chartCursor = chart.chartCursor;

        if (document.getElementById("rb1").checked) {
            chartCursor.pan = false;
            chartCursor.zoomable = true;

        } else {
            chartCursor.pan = true;
        }
        chart.validateNow();
    }


</script>



<div id="chartdiv" style="width: 100%; height: 400px; background-color:antiquewhite"></div>
<div style="margin-left:35px;">
    <input type="radio" checked="true" name="group" id="rb1" onclick="setPanSelect()">Select
    <input type="radio" name="group" id="rb2" onclick="setPanSelect()">Pan
</div>
