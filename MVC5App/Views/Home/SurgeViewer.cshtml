@{
    ViewBag.Title = "SurgeViewer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/Test/JacksonScript.js"></script>
<script src="~/Scripts/amcharts/amcharts.js"></script>
<script src="~/Scripts/amcharts/serial.js"></script>

<h2>Surge Viewer</h2>
@{
    string queryString = "";
    string[] topicList;

    string companyString = (string)ViewData["companyName"];
    string topicString = (string)ViewData["topicName"];

    if (companyString.IsEmpty() || topicString.IsEmpty())
    {
        companyString = "irib";
        topicString = "MySQL";
    }

    Html.BeginForm("PlotData", "Home", FormMethod.Get);
    <input type="text" name="companyName" value="@companyString" />
    <input type="text" name="topicName" value="@topicString" />
    <input type="submit" value="Submit" />
    Html.EndForm();

}

<hr />

<script>
    var chartData = [];
    generateChartData();

    var chart = AmCharts.makeChart("chartdiv", {
        type: "serial",
        dataProvider: chartData,
        categoryField: "date",
        categoryAxis: {
            parseDates: true,
            gridAlpha: 0.15,
            minorGridEnabled: true,
            axisColor: "#DADADA"
        },
        valueAxes: [{
            axisAlpha: 0.2,
            id: "v1"
        }],
        graphs: [{
            title: "red line",
            id: "g1",
            valueAxis: "v1",
            valueField: "visits",
            bullet: "round",
            bulletBorderColor: "#FFFFFF",
            bulletBorderAlpha: 1,
            lineThickness: 2,
            lineColor: "#b5030d",
            negativeLineColor: "#0352b5",
            balloonText: "[[category]]<br><b><span style='font-size:14px;'>value: [[value]]</span></b>"
        }],
        chartCursor: {
            fullWidth: true,
            cursorAlpha: 0.1
        },
        chartScrollbar: {
            scrollbarHeight: 40,
            color: "#FFFFFF",
            autoGridCount: true,
            graph: "g1"
        },

        mouseWheelZoomEnabled: true
    });

    chart.addListener("dataUpdated", zoomChart);


    function generateChartData() {

        var newDate = new Date();
        var visits = 0;

        //Get the data from MySQL
        @{
            var tempQueryTools = new MVC5App.Scripts.Test.QueryTools();
            queryString = tempQueryTools.findSurgeWithCompanyTopic(companyString, topicString, "%");
            topicList = queryString.Split('%');

            for (int i = 0; i < topicList.Length - 2; i++)
            {
                @:newDate = ParseDate("@topicList[i]");
                @:visits = @topicList[++i];
                @:chartData.push({date: newDate,visits: visits});
            }
        }
    }

    // this method is called when chart is first inited as we listen for "dataUpdated" event
    function zoomChart() {
        // different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
        chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
    }

    // changes cursor mode from pan to select
    function setPanSelect() {
        var chartCursor = chart.chartCursor;

        if (document.getElementById("rb1").checked) {
            chartCursor.pan = false;
            chartCursor.zoomable = true;

        } else {
            chartCursor.pan = true;
        }
        chart.validateNow();
    }
</script>



<div id="chartdiv" style="width: 100%; height: 400px; background-color:antiquewhite"></div>
<div style="margin-left:35px;">
    <input type="radio" checked="true" name="group" id="rb1" onclick="setPanSelect()">Select
    <input type="radio" name="group" id="rb2" onclick="setPanSelect()">Pan
</div>


<hr />

<p>AngularJS displays DB query without reloading page</p>

<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.4/angular.min.js"></script>

<table style="width:100%">
    <tr>
        <td style="width:50%; vertical-align:top;">
            <div id="dvFirst">
                <div ng-controller="myCtrl">

                    <h2 style="text-align:center">Company: @companyString</h2>
                    <h4 style="text-align:center">More topics for @companyString
                    <button ng-click="count = myWelcome">Submit</button></h4>

                    <div href="#" ng-repeat="x in count.split(';')">
                        <a href="~/Home/PlotData?companyName=@companyString&topicName={{x.trim().split('|')[0]}}">{{x.trim().split('|')[0]}}</a> {{x.trim().split('|')[1]}}
                    </div>
                </div>
            </div>
        </td>
        <td style="width:50%; vertical-align:top;">
            <div id="dvSecond">
                <div ng-controller="myCtrl2">

                    <h2 style="text-align:center">Topic: @topicString</h2>
                    <h4 style="text-align:center">More companies for @topicString
                    <button ng-click="count2 = myWelcome2">Submit</button></h4>

                    <div href="#" ng-repeat="x2 in count2.split(';')">
                        <a href="~/Home/PlotData?companyName={{x2.trim().split('|')[0]}}&topicName=@topicString">{{x2.trim().split('|')[0]}}</a> {{x2.trim().split('|')[1]}}
                    </div>
                </div>
            </div>
        </td>
    </tr>
</table>






<script>
    var firstApp = angular.module('firstApp', []);
    firstApp.controller('myCtrl', function ($scope, $http) {
        $http.get("/Home/SinglePage?companyName=@companyString")
            .then(function (response) {
                var topicList = response.data;
                $scope.myWelcome = topicList;
            });
    });


    var secondApp = angular.module('secondApp', []);
    secondApp.controller('myCtrl2', function ($scope, $http) {
        $http.get("/Home/SinglePageCompanies?topicName=@topicString")
            .then(function (response) {
                var companyList = response.data;
                $scope.myWelcome2 = companyList;
            });
    });

    var dvFirst = document.getElementById('dvFirst');
    var dvSecond = document.getElementById('dvSecond');

    angular.element(document).ready(function () {
        angular.bootstrap(dvFirst, ['firstApp']);
        angular.bootstrap(dvSecond, ['secondApp']);
    });

</script>

